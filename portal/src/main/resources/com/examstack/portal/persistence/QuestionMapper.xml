<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.examstack.portal.persistence.QuestionMapper">



	<select id="getQuestionTypeList" resultType="com.examstack.common.domain.question.QuestionType">
		select
		id,name,subjective from et_question_type
	</select>
	<!-- 试题列表部分 -->
	<select id="getQuestionByQuestionId" resultType="com.examstack.common.domain.question.Question">
		select * from et_question
		<where>
			id = #{questionId}
		</where>
	</select>

	<select id="getQuestionByTypeId" resultType="com.examstack.common.domain.question.Question">
		select * from et_question
		<where>
			question_type_id = #{questionTypeId}
		</where>
	</select>
	<select id="getQuestionAnalysisListByIdList"
		resultType="com.examstack.common.domain.question.QuestionQueryResult">
		SELECT a.id
		questionId,a.content,a.answer,a.analysis,a.question_type_id
		questionTypeId,a.reference
		referenceName,a.examing_point
		examingPoint,b.point_id knowledgePointId,GROUP_CONCAT(d.field_name,'
		&gt; ',c.point_name,' &gt; ',
		a.examing_point ,case when a.keyword is
		null then '' else
		CONCAT('
		知识关键点：',a.keyword) end)
		pointName,GROUP_CONCAT(d.field_name)
		fieldName
		from et_question
		a,et_question_2_point
		b,et_knowledge_point
		c,et_field d
		<where>
			a.id=b.question_id and
			b.point_id=c.point_id and
			c.field_id=d.field_id
			<if test="array != null">
				and
				a.id in
				<foreach collection="array" open="(" close=")" index="index"
					item="item" separator=",">
					#{item}
				</foreach>
			</if>

		</where>
		group by
		a.id,a.content,a.answer,a.analysis,a.question_type_id,a.reference,
		a.examing_point,b.point_id;
	</select>
	<!-- 针对错题的显示，修正问题，提供针对knowledgePoint的查询 -->
	<select id="getQuestionAnalysisListByIdListAndKnowLedgePointId"
        resultType="com.examstack.common.domain.question.QuestionQueryResult">
        SELECT a.id
        questionId,a.content,a.answer,a.analysis,a.question_type_id
        questionTypeId,a.reference
        referenceName,a.examing_point
        examingPoint,b.point_id knowledgePointId,GROUP_CONCAT(d.field_name,'
        &gt; ',c.point_name,' &gt; ',
        a.examing_point ,case when a.keyword is
        null then '' else
        CONCAT('
        知识关键点：',a.keyword) end)
        pointName,GROUP_CONCAT(d.field_name)
        fieldName
        from et_question
        a,et_question_2_point
        b,et_knowledge_point
        c,et_field d
        <where>
            a.id=b.question_id and
            b.point_id = #{knowledgePointId} and
            b.point_id=c.point_id and
            c.field_id=d.field_id
            <if test="array != null">
                and
                a.id in
                <foreach collection="array" open="(" close=")" index="index"
                    item="item" separator=",">
                    #{item}
                </foreach>
            </if>

        </where>
        group by
        a.id,a.content,a.answer,a.analysis,a.question_type_id,a.reference,
        a.examing_point,b.point_id;
    </select>
	<select id="getQuestionAnalysisListByPointIdAndTypeId"
		resultType="com.examstack.common.domain.question.QuestionQueryResult">
		select z.*, f.content parentContent from  (SELECT a.id
		questionId, a.parentId, a.content,a.answer,a.analysis,a.question_type_id
		questionTypeId,a.reference
		referenceName,a.examing_point
		examingPoint,b.point_id knowledgePointId,GROUP_CONCAT(d.field_name,'
		&gt; ',c.point_name,' &gt; ',
		case when a.keyword is null then '' else
		CONCAT('
		知识关键点：',a.keyword) end)
		pointName,GROUP_CONCAT(d.field_name)
		fieldName
		from et_question
		a,et_question_2_point
		b,et_knowledge_point
		c,et_field d
		<where>
			a.id=b.question_id and
			b.point_id=c.point_id and
			c.field_id=d.field_id
			and
			a.question_type_id=#{typeId}
			and
			b.point_id=#{pointId}
		</where>
		group by
		a.id,a.content,a.answer,a.analysis,a.question_type_id,a.reference,
		a.examing_point,b.point_id) z  left join et_question_parent f
        on z.parentId=f.id
	</select>

	<select id="getAllField" resultType="com.examstack.common.domain.question.Field">
        select a.field_id fieldId,
           a.field_name fieldName,
           a. memo,
           a.state,
            case when exists(select 1 from
            et_knowledge_point m where m.field_id=a.field_id) then 0
            else 1 end
            removeable,
           c.expired_time expiredTime
            from et_field a inner join  et_group_2_field b on a.field_id=b.fieldId
           inner join  et_user_2_group  c on  b.groupId = c.group_id  and c.user_id = #{userId} and NOW() &lt; c.expired_time
	</select>

	<select id="getKnowledgePointByFieldId" resultType="com.examstack.common.domain.question.KnowledgePoint">
		select a.point_id pointId,a.point_name pointName,a.field_id
		fieldId,a.memo,a.state,b.field_name fieldName,
		case when exists(select
		1 from et_question_2_point m where m.point_id=a.point_id) then 0
		else 1
		end removeable
		from et_knowledge_point a,et_field b
		<where>
			a.field_id=b.field_id
			
			<if test="array != null">
				and a.field_id in
				<foreach collection="array" index="index" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</where>
	</select>

	<select id="getQuestionListByFieldId"
		resultType="com.examstack.common.domain.question.QuestionQueryResult">
		select z.*, f.content parentContent from (SELECT a.id
		questionId, a.parentId, a.content,a.answer,a.analysis,a.question_type_id
		questionTypeId,a.reference
		referenceName,a.examing_point
		examingPoint,b.point_id knowledgePointId
		from et_question
		a,et_question_2_point
		b,et_knowledge_point
		c,et_field d
		<where>
			a.id=b.question_id and
			b.point_id=c.point_id and
			c.field_id=d.field_id
			and d.field_id=#{fieldId}
		</where>
		) z left join et_question_parent f
        on z.parentId=f.id
	</select>
	
	<select id="getQuestionStaticByFieldId" resultType="com.examstack.common.domain.question.QuestionStatistic">
		select c.field_id fieldId,c.point_id pointId,c.point_name pointName,count(1) amount from et_question a,et_question_2_point b,et_knowledge_point c
		where a.id=b.question_id and b.point_id=c.point_id and c.field_id=#{fieldId} group by c.field_id,c.point_id,c.point_name
	</select>
	
	<select id="getTypeQuestionStaticByFieldId" resultType="com.examstack.common.domain.question.QuestionStatistic">
		select c.field_id fieldId,c.point_id pointId,c.point_name pointName,d.id questionTypeId,d.name questionTypeName,count(1) amount from et_question a,et_question_2_point b,et_knowledge_point c,et_question_type d
		where a.id=b.question_id and b.point_id=c.point_id and c.field_id=#{fieldId} and a.question_type_id=d.id group by c.field_id,c.point_id,c.point_name,d.id,d.name
	</select>
	
	<select id="getPersonalityTestXuepai" resultType="com.examstack.common.domain.personality.PersonalityTestXuepai">
		select id, name,summary from et_charactor_xuepai;
	</select>
	
	<!-- getPersonalityLst 获取性格测试的学派分支下的性格元素种类，为省事，把分数也放到model里面，但没有值 -->
		<select id="getPersonalityLst" resultType="com.examstack.common.domain.personality.PersonalityScore">
		select a.id Id, a.name, a.xuepaiId, a.summary from et_charactor_type a;
	</select>
	<!-- 根据ID获取相应的性格特征数据，主要是九型人格数据 -->
	<select id="getPersonalityTestCharactorById" resultType="com.examstack.common.domain.personality.PersonalityCharactor">
		select id, name,xuepaiId, summary from et_charactor_type where id=#{charactorId};
	</select>
	
	 <select id="getQuestionListByIdList" resultType="com.examstack.common.domain.question.Question">
		select z.*,  f.content parentContent from  (select a.id,a.parentId, a.name,a.content,a.question_type_id,a.creator,a.answer,a.analysis,a.reference referenceName,group_concat(concat(d.field_name,'-',c.point_name)) pointName,
		e.name
		questionTypeName, examing_point examingPoint,
		(select group_concat(m.tag_name,' ') from et_tag m,et_question_2_tag n
		where m.tag_id=n.tag_id and n.question_id=a.id) tags from et_question
		a,et_question_2_point
		b,et_knowledge_point
		c,et_field d,et_question_type
		e
		<where>
			a.id=b.question_id and b.point_id=c.point_id and
			c.field_id=d.field_id
			and a.question_type_id=e.id
			<if test="ids != null">
				and a.id in
				<foreach close=")" separator="," open="(" item="item" index="index"
					collection="ids"> #{item} </foreach>
			</if>
			 
		</where>
		group by a.id,a.name,a.content,a.question_type_id,a.creator,a.answer,a.analysis,a.reference,a.examing_point,e.`name`,a.examing_point,tags)
		 z left join et_question_parent f
        on z.parentId=f.id;
	</select>
</mapper>